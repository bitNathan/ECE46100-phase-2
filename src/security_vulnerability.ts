// This file will contain the logic to fetch security data from GitHub (or another API). We'll make a call to the GitHub API endpoint that lists security vulnerabilities for a repository.

import axios from 'axios';
import logger from './logger';

// Function to get security vulnerabilities
export async function getSecurityVulnerabilities(owner: string, repo: string): Promise<[number, number]> {
    const start = Date.now();
    logger.debug(`Fetching security vulnerabilities for ${owner}/${repo}`);

    try {
        const apiUrl = `https://api.github.com/repos/${owner}/${repo}/vulnerability-alerts`;
        const response = await axios.get(apiUrl, {
            headers: {
                'Accept': 'application/vnd.github.dorian-preview+json'
            }
        });

        const vulnerabilities = response.data.length;
        const latency = (Date.now() - start) / 1000;
        logger.debug(`Vulnerabilities: ${vulnerabilities}, Latency: ${latency}s`);
        return [vulnerabilities, latency];
    } catch (error) {
        if (error instanceof Error) {
            logger.error(`Error occurred: ${error.message}`);
        } else {
            logger.error('Unknown error occurred');
        }
        // Return default values in case of an error
        const latency = (Date.now() - start) / 1000;
        return [0, latency];
    }
}
